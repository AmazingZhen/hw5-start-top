// Generated by LiveScript 1.3.1
(function(){
  var xmlhttpreq, Button, clickButtonToGetRandomNumber, clickBubbleToCalculateSum, resetWhenLeavingApb;
  xmlhttpreq = null;
  Button = (function(){
    Button.displayName = 'Button';
    var prototype = Button.prototype, constructor = Button;
    Button.buttons = [];
    Button.sum = 0;
    Button.reset = function(){
      var i$, ref$, len$, button;
      this.sum = 0;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        button.state = 'enabled';
        button.buttonDom.removeClass('disabled waiting done').addClass('enabled');
        button.buttonDom.find('.unread').text('...');
      }
    };
    function Button(buttonDom){
      var this$ = this;
      this.buttonDom = buttonDom;
      this.state = 'enabled';
      this.buttonDom.addClass('enabled');
      this.buttonDom.click(function(){
        if (this$.state === 'enabled') {
          this$.disableAllOtherButtons();
          this$.wait();
          this$.getRandomNumberAndShow();
        }
      });
      this.constructor.buttons.push(this);
    }
    prototype.disableAllOtherButtons = function(){
      var i$, ref$, len$, button, results$ = [];
      for (i$ = 0, len$ = (ref$ = this.constructor.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button !== this && button.state !== 'done') {
          results$.push(button.disable());
        }
      }
      return results$;
    };
    prototype.enableAllOtherButtons = function(){
      var i$, ref$, len$, button, results$ = [];
      for (i$ = 0, len$ = (ref$ = this.constructor.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button !== this && button.state !== 'done') {
          results$.push(button.enable());
        }
      }
      return results$;
    };
    prototype.showNumber = function(number){
      this.buttonDom.find('.unread').text(number);
    };
    prototype.checkIfAllButtonsAreDone = function(){
      var i$, ref$, len$, button, bubble;
      for (i$ = 0, len$ = (ref$ = this.constructor.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button.state !== 'done') {
          return false;
        }
      }
      bubble = $('#info-bar');
      bubble.removeClass('disabled').addClass('enabled');
    };
    prototype.getRandomNumberAndShow = function(){
      var this$ = this;
      return xmlhttpreq = $.get('/api/random', function(number, result){
        this$.done();
        this$.enableAllOtherButtons();
        this$.showNumber(number);
        this$.constructor.sum += parseInt(number);
        this$.checkIfAllButtonsAreDone();
      });
    };
    prototype.disable = function(){
      this.state = 'disabled';
      this.buttonDom.removeClass('enabled').addClass('disabled');
    };
    prototype.enable = function(){
      this.state = 'enabled';
      this.buttonDom.removeClass('disabled').addClass('enabled');
    };
    prototype.wait = function(){
      this.state = 'waiting';
      this.buttonDom.removeClass('enabled').addClass('waiting');
    };
    prototype.done = function(){
      this.state = 'done';
      this.buttonDom.removeClass('waiting').addClass('done');
    };
    return Button;
  }());
  $(function(){
    clickButtonToGetRandomNumber();
    clickBubbleToCalculateSum();
    return resetWhenLeavingApb();
  });
  clickButtonToGetRandomNumber = function(){
    var i$, ref$, len$, results$ = [];
    for (i$ = 0, len$ = (ref$ = $('#control-ring .button')).length; i$ < len$; ++i$) {
      results$.push((fn$.call(this, i$, ref$[i$])));
    }
    return results$;
    function fn$(i, dom){
      var button;
      return button = new Button($(dom));
    }
  };
  clickBubbleToCalculateSum = function(){
    var bubble;
    bubble = $('#info-bar');
    bubble.addClass('disabled');
    return bubble.click(function(){
      if (bubble.hasClass('enabled')) {
        bubble.removeClass('enabled').addClass('disabled');
        bubble.find('.amount').text(parseInt(Button.sum));
      }
    });
  };
  resetWhenLeavingApb = function(){
    return $('#at-plus').on('mouseleave', function(event){
      var bubble;
      if (xmlhttpreq) {
        xmlhttpreq.abort();
      }
      Button.reset();
      bubble = $('#info-bar');
      bubble.removeClass('enabled').addClass('disabled');
      bubble.find('.amount').text('');
    });
  };
}).call(this);
